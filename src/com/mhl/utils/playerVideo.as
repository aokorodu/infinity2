////  PlayerVideo////  Created by Matthew on 2012-09-28.//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.////package com.mhl.utils{	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.*;	import flash.events.StageVideoAvailabilityEvent;	import flash.media.StageVideo;	import flash.events.StageVideoEvent;	import flash.geom.Rectangle;	import flash.media.StageVideoAvailability;	import flash.media.Video;	import flash.net.NetConnection;	import flash.net.NetStream;		import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.greensock.loading.*;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.display.*;	public class playerVideo extends Sprite {		private var stageVideoAvail:Boolean;		private var sv:StageVideo;		public var transportBackdrop:TransportBackdrop;		public var surface:hitme_lg;		public var lights:Rectangle;		public var myTarget:MovieClip;		public var video:NetStream;				public function playerVideo(target:MovieClip) {			target.stage.addEventListener(StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY, onAvail);		/*	addEventListener(MouseEvent.CLICK, clickHandler);*/			myTarget = target;		}		private function onAvail(e:StageVideoAvailabilityEvent):void {			stageVideoAvail = (e.availability == StageVideoAvailability.AVAILABLE);			initVideo();		}		private function initVideo():void {			var nc:NetConnection = new NetConnection();			nc.connect(null);			var ns:NetStream = new NetStream(nc);			ns.client = this;			if (stageVideoAvail){				sv = myTarget.stage.stageVideos[0];				sv.addEventListener(StageVideoEvent.RENDER_STATE, onRender);				sv.attachNetStream(ns);			/*	trace('available');*/			}else{				var vid:Video = new Video(1024,576);				addChild(vid);				vid.attachNetStream(ns);				vid.y=90;							/*	trace('not');*/			}	/*		ns.play('movs/toystory.mov');				ns.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);*/									surface = new hitme_lg();			addChild(surface);						/*	surface.addEventListener(MouseEvent.CLICK, clickHandler);*/			surface.alpha = 0;			video = ns;						transportBackdrop = new TransportBackdrop();			addChild(transportBackdrop);			transportBackdrop.alpha= 0;					}				public function netStatusHandler(e:NetStatusEvent):void { 			if (e.info.code == "NetStream.Play.Stop"){				e.target.play('movs/toystory.mov'); 			}		}		private function onRender(e:StageVideoEvent):void {			sv.viewPort = new Rectangle(0,90,1024,567);		}		public function onMetaData(e:Object):void {		}		public function onXMPData(e:Object):void {		}				public function clickHandler(e:MouseEvent):void {	/*	dispatchEvent(new AppEvent("menuStatus","UI",5,true));*/		}		public function transportOnOff(transportState:Boolean):void{									// Display and remove gradient for backdrop			if(transportState== true ){							TweenLite.to(transportBackdrop, .8, {autoAlpha:.8, ease:Expo.easeOut});							}else{				TweenLite.to(transportBackdrop, .2, {autoAlpha:0, ease:Expo.easeIn});						}		/*	surface.removeEventListener(MouseEvent.CLICK,clickHandler );*/							}		public function PlayPause(playState:Boolean):void{						if(playState== true ){								///Show video		/*		TweenLite.to(surface, .2, {autoAlpha:0, ease:Expo.easeIn});*/				video.resume();						}else{				video.pause();				//dim video			/*	TweenLite.to(surface, .8, {autoAlpha:.8, ease:Expo.easeOut});*/				}		/*	surface.removeEventListener(MouseEvent.CLICK,clickHandler );*/							}		public function dim():void{					/*	surface.removeEventListener(MouseEvent.CLICK,clickHandler );*/	/*		video.pause();				TweenLite.to(surface, .8, {autoAlpha:.8, ease:Expo.easeOut});*/						}		public function activate():void{					/*	surface.addEventListener(MouseEvent.CLICK, clickHandler);*/	/*		TweenLite.to(surface, .2, {autoAlpha:0, ease:Expo.easeIn});				video.resume();	*/		}		function replay(event:Object):void {		    // vid.vid.playr.play();		    event.target.play();		}	}}