////  appFactory////  Created by Matthew on 2012-09-27.//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.////package com.factory {	import flash.display.*;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.text.TextFieldType;	import flash.text.Font;	import flash.geom.*;		import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.greensock.loading.*;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.display.*;		 public class AppFactory extends MovieClip {		public var Light:XFINITYLight;		public var Medium:XFINITYMedium;		public var Bold:XFINITYBold;		public var MediumCond:XFINITYMediumCond;		public var HelvThin:HelveticaNeueThin;		public var Indic:XFINITYIndicators;		public var UnivCond:UniversCond;		public var _queue:LoaderMax;								public function AppFactory() {			Light = 	new XFINITYLight();			Medium = 	new XFINITYMedium();		 	Bold = 		new XFINITYBold();		  	MediumCond = new XFINITYMediumCond();			HelvThin = 	new HelveticaNeueThin();			Indic = 	new XFINITYIndicators();			UnivCond = 	new UniversCond();						this._queue = new LoaderMax({name:"mainQueue", auditSize:false, maxConnections:7});		}								// Do my thing		public function Spr(par:MovieClip, str:String, pos:Array=null, scal:Array=null, tstr:String="", tstyle:String="body", tthickness:Number=0, tclr:String="grey", tcenter:Boolean=false, twidth:Number=0, theight:Number=0, tlead:Number=0):Sprite {			if (pos==null){ pos = [0,0]; }			if (scal==null){ scal=[1,1]; }			var mc = new Sprite();			mc.x = pos[0];			mc.y = pos[1];			mc.scaleX = scal[0];			mc.scaleY = scal[1];			par.addChild(mc);			par[str] = mc;			if (tstr==""){	return mc; }			var t = Text(tstr, tstyle, tthickness, tclr, tcenter, twidth, theight, tlead);			mc.addChild(t);			return mc;		}		public function Mov(par:MovieClip, str:String, pos:Array=null, scal:Array=null):Sprite {			if (pos==null){ pos = [0,0]; }			if (scal==null){ scal=[1,1]; }			var mc = new MovieClip();			mc.x = mc.sx = pos[0];			mc.y = mc.sy = pos[1];			mc.scaleX = scal[0];			mc.scaleY = scal[1];			par.addChild(mc);			par[str] = mc;			return mc;		}						public function Text(str:String, style:String="body", thickness:Number=0, clr:String="grey", center:Boolean=false, w:Number=0, h:Number=0, l:Number=0):TextField {			var t:TextField = new TextField();			t.embedFonts = true;			t.selectable = false;			t.autoSize = TextFieldAutoSize.LEFT; 			if (w!=0){				t.multiline = true;				t.wordWrap = true;				t.width = w;			}			if (h!=0){				if (str.length > h){					str = str.substr(0,h);					str += "...";				}			}			t.text = str;			var f:TextFormat = new TextFormat();			if (w!=0){ f.leading = 8; }			if (l!=0){ f.leading = l; }			switch (style) {				case "godly"  :	f.size = 60; 	break;				case "massive": f.size = 47; 	break;				case "super"  :	f.size = 45; 	break;				case "bighead" :f.size = 43; 	break;				case "head"  :	f.size = 42; 	break;				case "title" :	f.size = 40; 	break;				case "bigger" :	f.size = 36; 	break;				case "big" :	f.size = 35; 	break;				case "xnav"   :	f.size = 32; 	break;				case "nav"   :	f.size = 30; 	break;				case "xxlarge":	f.size = 29; 	break;				case "xlarge" :	f.size = 25; 	break;				case "large" :	f.size = 24; 	break;				case "xmedium" :f.size = 23; 	break;				case "medium" :	f.size = 22; 	break;				case "body"  :	f.size = 20; 	break;				case "small"  :	f.size = 18; 	break;				case "xsmall"  :f.size = 17; 	break;				case "tiny"  :	f.size = 16; 	break;				case "nano"  :	f.size = 15; 	break;				case "atom":	f.size = 14; 	break;			}				switch (thickness) {				case 0 :	f.font = Light.fontName;		break;				case 1 :	f.font = Medium.fontName;		break;				case 2 :	f.font = MediumCond.fontName;	break;				case 3 :	f.font = HelvThin.fontName;		break;				case 4 :	f.font = Indic.fontName;	f.letterSpacing=2;		break;				case 5 :	f.font = UnivCond.fontName;		break;			}				switch (clr) {				case "ccc" :	f.color = 0xcccccc; 	break; 				case "owhite" :	f.color = 0xc2cdd1; 	break; 				case "blue3" :	f.color = 0x2ca4e3; 	break; 				case "blue2" :	f.color = 0x3399cc; 	break;				case "b7" :		f.color = 0xb7c1c5; 	break;				case "grey" :	f.color = 0xbababa; 	break;				case "black" :	f.color = 0x292929; 	break;				case "dark" :	f.color = 0x7f7f7f; 	break;				case "blue" :	f.color = 0x178ac6; 	break;				//case "white" :	f.color = 0xe5e5e5; 	break;				case "white" :	f.color = 0xf1f1f1; 	break;				case "fff" :	f.color = 0xffffff; 	break;				case "666" :	f.color = 0x666666; 	break;				case "cac" : 	f.color = 0xcacbcb;		break;				case "4c" : 	f.color = 0x4c4c4c;		break;				case "91" : 	f.color = 0x91979b;		break;				case "999" : 	f.color = 0x999999;		break;				case "17" : 	f.color = 0x178AC5;		break;				case "1a" : 	f.color = 0x1A6A91;		break;				case "moblue" : f.color = 0x2CA4E3;		break;			}				t.setTextFormat(f);			// WINDOWS FONT REPOS			//t.y -= t.textHeight/6;			if (center){ TextCenter(t); }			return t;		}		public function TextCenter(t:TextField):void {			t.x -= t.textWidth/2;			t.y -= t.textHeight/2;		}				public	function Hide(m):void {				m.visible = false;				m.alpha = 0;			}		public function Show(m):void {				m.visible = true;				m.alpha = 1;			}		public function Tint(m, c:uint):void {			var colorTransform:ColorTransform = m.transform.colorTransform;			colorTransform.color = c;			m.transform.colorTransform = colorTransform;		}											};}