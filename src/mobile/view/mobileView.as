package mobile.view {	import mobile.*;	import mobile.model.*;	import mobile.view.*;	import mobile.controller.*;	import com.mhl.*/*	import com.mhl.libs.**/	import com.mhl.utils.navigationCollapse/*	import com.mhl.views.entity;*/	import fl.controls.Button;	import flash.display.MovieClip;	import flash.geom.ColorTransform;	import flash.events.MouseEvent	import flash.events.TouchEvent;	import flash.events.Event	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.greensock.loading.*;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.display.*;		public class mobileView {		var model:mobileModel;		var controller:mobileController;			public var masterInst:MovieClip;		public var _player:MovieClip;		public var _canvas:canvas;		public var _navigation:mobileUI;		public var _lock:canvas;										public function mobileView(model:mobileModel, controller:mobileController, holder:MovieClip) {			// master links			masterInst = holder;			this.model = model;			this.controller = controller;			/*			this._canvas = new canvas(holder);			holder.addChild(_canvas);*/		/*	this._canvas.addEventListener(TouchEvent.TOUCH_TAP, controller.tapNavOnOff);*/						///Create Navigation			this._navigation = new mobileUI(model);			holder.addChild(_navigation);			_navigation.name ="_navigation"			this._navigation.addEventListener(TouchEvent.TOUCH_TAP, controller.tapOpenClose);									this._lock = new canvas(holder);			 this._lock.name ="_backdrop"			holder.addChild(_lock);		   			_lock.visible = false;						// listen for primary events			this._navigation._primaryNav._guide.addEventListener(TouchEvent.TOUCH_TAP, controller.tapOpenSection);			this._navigation._primaryNav._saved.addEventListener(TouchEvent.TOUCH_TAP, controller.tapOpenSection);			this._navigation._primaryNav._search.addEventListener(TouchEvent.TOUCH_TAP, controller.tapOpenSection);						// listen for secondary events			this._navigation._subGuide.addEventListener(TouchEvent.TOUCH_TAP, controller.tapSubSection);			this._navigation._subSaved.addEventListener(TouchEvent.TOUCH_TAP, controller.tapSubSection);		/*	this._navigation._close.addEventListener(TouchEvent.TOUCH_TAP, controller.tapClose);*/									this.model.transportIsVisible = !this.model.transportIsVisible;					var startnav = this.model.transportIsVisible;				_navigation.navigationOnOff(startnav);					}				public function updateUI(e:Event):void {						// update transport and primary visible			var showHide = this.model.transportIsVisible;			_navigation.navigationOnOff(showHide);						// update primary views			collapseExpandDrawer();			_navigation.setNavigation();						// update secondary views			_navigation.setSubNavigation();			var _closeOnOff = this.model.closeOnOff;						this.model.guiUpdated = true;			}			public function resetApp():void{		this.model.resetApp();		this.model.closeOnOff = false;		_navigation.resetNavigation();	}				public function collapseExpandDrawer():void{					var openClose = this.model.drawerIsOpen;			if(openClose== true ){								TweenLite.to(masterInst, .8, {x:300, ease:Expo.easeOut});				_navigation.buttonOn("_collapse");				this._lock.visible = true;				this._lock.addEventListener(TouchEvent.TOUCH_TAP, controller.tapOpenClose);			}else{								TweenLite.to(masterInst, .6, {x:0, ease:Expo.easeOut});				_navigation.buttonOff("_collapse");				this._lock.visible = false;				this._lock.removeEventListener(TouchEvent.TOUCH_TAP, controller.tapOpenClose);													}												}	}}