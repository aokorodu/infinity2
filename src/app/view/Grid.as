////  Grid////  Created by Matthew on 2012-11-03.//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.////package app.view {	import app.*;	import app.model.*;	import app.view.*;	import app.view.grid.catalog.*;		import app.control.*;	import flash.utils.Dictionary; 	import fl.controls.Button;	import flash.display.MovieClip;	import flash.geom.ColorTransform;	import flash.events.MouseEvent	import flash.events.TouchEvent;	import flash.events.Event	import flash.utils.Timer;	import flash.utils.getTimer;	import flash.events.TimerEvent;	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.greensock.loading.*;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.display.*;	 public class Grid extends AppView{		private var _viewState:Boolean;		private var _viewMemory:Object;		private var _current:MovieClip;				protected var sel:Array;		protected var sel_row:MovieClip;		protected var sel_item:MovieClip;		protected var _entity:Entity;		protected var timer:Timer;		protected var timelock:Boolean = false;		protected var dragging:Boolean;		protected var touchx:Number;		protected var touchy:Number;		protected var velocity:Number;		protected var dy:Number;				public function Grid(model:AppModel, controller:AppControl, holder:MovieClip) {		super(model, controller, holder);		this._viewMemory = new Object();		this._current = new MovieClip();					TweenPlugin.activate([EndArrayPlugin, ColorMatrixFilterPlugin, TintPlugin, ColorTransformPlugin, AutoAlphaPlugin, ScrollRectPlugin]);		}		override public function update(e:Event):void {			var sets = this.model.dataSets;			var episodes = this.model.episodeSets			var catArray = this.model.catalog;			var destinationEntity = this.model.destinationEntity;						TweenLite.to(_current, 0.6, {autoAlpha:0, ease:Expo.easeOut});			//_current.visible = false;					// Set View State 'catalog' or single'  			if(catArray.length == 1 ){				if(_viewMemory.hasOwnProperty(destinationEntity.TITLE)){ 					_current = _viewMemory[destinationEntity.TITLE]; _current.visible = true;				}else{ 					var destination:Catalog					switch(catArray[0]){ case "Featured Movies": destination = new Movie(model, controller, destinationEntity); break;					case "Get Episodes": destination = new Tv(model, controller, destinationEntity); break;}					addChild(destination);_viewMemory[destinationEntity.TITLE] = destination; _current = _viewMemory[destinationEntity.TITLE];				}			}else{				if(_viewMemory.hasOwnProperty(catArray)){ 					_current = _viewMemory[catArray]; _current.visible = true;				}else{					var browse = new Browse(model, controller, null);addChild(browse);					_viewMemory[catArray] = browse; _current = _viewMemory[catArray];					}			}									_current.alpha = 0;			TweenLite.to(_current, 0.8, {delay:0.2, alpha:1, ease:Expo.easeOut});					}						// get public acess to clips'		public function get current():MovieClip{			return _current;		}		public function get catalog():Object{			return _catalog;		}		public function get single():Object{			return _single;		}		// get view state 		public function get viewState():Boolean{			return _viewState;		}	}};