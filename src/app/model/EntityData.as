////  EntityData////  Created by Matthew on 2012-11-04.//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.////package app.model{	import com.mhl.*;	import app.model.Entity	import app.model.AppModel;	import com.mhl.libs.recentActivity;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.utils.Dictionary; 	import fl.data.DataProvider;	import flash.data.SQLResult;	import flash.data.SQLConnection;	import flash.filesystem.File;	import flash.data.SQLStatement;	import flash.data.SQLConnection;	import flash.events.*;	import flash.events.EventDispatcher;	import flash.events.Event;	 public class EntityData {			protected var model:AppModel			protected var _title:String;			protected var selectStmt:SQLStatement			protected var _result:SQLResult			protected var _entitymap:Dictionary;			protected var _data:Boolean			protected var _pageCount:int			// ABSTRACT Class (should be subclassed and not instantiated)			public function EntityData(model:AppModel) {				this.model = model;					this._entitymap = new Dictionary();				this.data = false;				this._pageCount = 0;			}						// ABSTRACT Method (must be overridden in a subclass);			public function init():void{}						// ABSTRACT Method (must be overridden in a subclass)	        public function createMap():void {};									public function set result(value:SQLResult):void{								this._result = value;							}			public function get result():SQLResult{								return _result			}			public function set data(value:Boolean):void{				this._data = value;			}			public function get data():Boolean{				return _data;			}						public function set pageCount(value:int):void{				this._pageCount = value;			}									public function get pageCount():int{								return _pageCount			}			public function get entitymap ():Dictionary{				return _entitymap			}			public function get title ():String{				return _title			}				public function getData(query:String, myClass:Class, num:int):void			{				trace("Loading data:");				selectStmt = new SQLStatement();				selectStmt.sqlConnection = this.model.dataConn.conn;				var sql:String = query;				selectStmt.text = sql;				selectStmt.itemClass = myClass;				selectStmt.addEventListener(SQLEvent.RESULT, selectResult);				selectStmt.addEventListener(SQLErrorEvent.ERROR, selectError);				selectStmt.execute(num);			}						public 	function selectResult(event:SQLEvent):void				{					trace("Result Ready: Notify ready");					selectStmt.removeEventListener(SQLEvent.RESULT, selectResult);					selectStmt.removeEventListener(SQLErrorEvent.ERROR, selectError);					this.result = selectStmt.getResult();					this.data = true;					createMap();										}			public function selectError(event:SQLErrorEvent):void				{					trace("Error loading data");					selectStmt.removeEventListener(SQLEvent.RESULT, selectResult);					selectStmt.removeEventListener(SQLErrorEvent.ERROR, selectError);					trace("SELECT error:", event.error);					trace("event.error.message:", event.error.message);					trace("event.error.details:", event.error.details);				}		}};